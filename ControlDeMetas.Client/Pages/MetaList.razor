@using Syncfusion.Blazor.Buttons;
@using Syncfusion.Blazor.Popups;
@using Syncfusion.Blazor.Inputs;

@page "/metas"

<style>


    /* Barra superior */
    .apptitle {
        background-color: #007bff; /* color de fondo azul */
        color: #fff; /* color de letra blanco */
        padding: 1rem;
        font-size: 2rem;
        font-weight: bold;
        /*font-family: Calibri, GillSans, Trebuchet, sans-serif;*/
        font-family: "Segoe UI", "GeezaPro", "DejaVu Serif", sans-serif, "-apple-system", "BlinkMacSystemFont";
    }

    /* Contenedor principal */
    .container {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        margin: 1rem;
        font-family: Calibri, GillSans, Trebuchet, sans-serif;
    }

    /* Columna izquierda */
    .master-column {
        width: 35%; /* ancho de la columna izquierda */
        display: flex;
        flex-direction: column;
        margin-right: 1rem;
    }

    .meta-group {
        border: 1px solid #ccc; /* borde del grupo de metas */
        border-radius: 5px; /* redondeado de bordes */
        margin-bottom: 1rem;
        padding: 1rem;
    }

    .meta-group:hover {
        background-color: ghostwhite;
    }

    .meta-group-selected {
        border: 1px solid #ccc; 
        border-radius: 5px; 
        margin-bottom: 1rem;
        padding: 1rem;
        background-color: ghostwhite;
    }

    .meta-name {
        font-weight: bold;
        margin-bottom: 0.5rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .meta-actions {
        display: flex;
    }

    
    .e-edit-6:before {
        content: '\e7a3';
        font-size: 16px;
    }

    .e-delete-2:before {
        content: '\e33e';
        font-size: 16px;
    }

    .meta-date {
        font-size: 0.8rem;
        margin-bottom: 0.5rem;
    }

    .meta-progress {
        height: 20px;
        border-radius: 5px;
        /*background-color: #eee;*/
        margin-bottom: 0.5rem;
    }

    .progress-bar {
        height: 100%;
        border-radius: 5px;
        background-color: #007bff;
    }

    .progress-label {
        font-size: 0.8rem;
        text-align: left;
        float: left;
    }

    .progress-percent {
        font-size: 0.8rem;
        text-align: right;
    }

    /* Columna derecha */

    
    .e-plus-2:before {
        content: '\e823';
        font-size: 16px;
    }

    .e-check:before {
        content: '\e7ff';
        font-size: 16px;
    }

    .detail-column {
        width: 65%; /* ancho de la columna derecha */
        display: flex;
        flex-direction: column;
    }

    .meta-detail {
        border: 1px solid #ccc; /* borde del detalle de meta */
        border-radius: 5px; /* redondeado de bordes */
        padding: 1rem;
    }

    .meta-title {
        font-weight: bold;
        margin-bottom: 1rem;
    }

    .meta-buttons {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
    }

    .add-task-button,
    .complete-task-button,
    .edit-task-button,
    .delete-task-button {
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 5px;
        padding: 0.5rem 1rem;
        cursor: pointer;
    }

        .add-task-button:hover,
        .complete-task-button:hover,
        .edit-task-button:hover,
        .delete-task-button:hover {
            background-color: #0069d9;
        }

    .task-table {
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 1rem;
    }

    .task-table-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 0.5rem;
    }

    .task-filter {
        border: none;
        border-bottom: 1px solid #ccc;
        padding: 0.5rem;
        margin-right: 1rem;
    }

    .task-header-item {
        font-weight: bold;
    }

    .important-header {
        margin-left: 1rem;
    }

    
</style>

<div>
    <div class="apptitle">
        <h1>Control de Metas</h1>
    </div>

    <div class="container">
        <div class="master-column">
            <!-- Lista de metas -->
            <div class="meta-buttons">
                <SfButton class="add-task-button" IconCss="e-icons e-plus-2" OnClick="OnBtnClick">Nueva Meta</SfButton>
                
            </div>
            @foreach (var meta in Metas)
            {
                @*<div class="meta-group">*@
                <div class="meta-group" id="@meta.Id" @onclick="() => MetaClickedAtIndex(meta.Id)">
                    <div class="meta-name">
                        <span class="bold">@meta.Nombre</span>
                        <div class="meta-actions">
                            <span class="e-icons e-edit-6" @onclick="() => MetaEditAtIndex(meta.Id)"></span>
                            <span class="e-icons e-delete-2" @onclick="() => MetaDeleteAtIndex(meta.Id)"></span>
                        </div>
                    </div>
                    <div class="meta-date">Fecha creada: @meta.FechaCreacion.ToString("d")</div>
                    <div class="meta-progress">
                        <div class="progress-label">Tareas completadas: @meta.TareasCompletadas / @meta.TotalTareas</div>
                        <div class="progress-percent"> @(Convert.ToInt32(meta.Cumplimiento))%</div>
                        <div class="w3-light-grey w3-round">
                            <div class="w3-container w3-blue w3-round" style="height:10px; width:@(Convert.ToInt32(meta.Cumplimiento))%"></div>
                        </div>

                    </div>
                </div>
            }


        </div>
        <div class="detail-column">
            <!-- Detalle de la meta seleccionada -->
            <div class="meta-detail">
                <div class="meta-title">@nombreMeta</div>
                
                <div>

                    <!-- Lista de tareas -->
                    @if(selectedMetaId != null)
                    {
                        <TareaList MetaId="@selectedMetaId" @ref="_tareaList" />
                    }
                    

                </div>
            </div>
        </div>
    </div>
</div>

@*Dialog para nueva meta*@
<SfDialog Width="335px" IsModal="true" @bind-Visible="@Visibility" >
        <DialogTemplates>
            <Header> Agregar nueva meta </Header>
            <Content>
                <SfTextBox ID="inNombreMeta" @bind-Value="@NombreMeta" 
                    @ref="MetaTextboxObj" Type="InputType.Text" Placeholder="Nombre"
                    HtmlAttributes="@(new Dictionary<string,object>() { { "maxLength", "80" } })"/>
            </Content>
        </DialogTemplates>
        <DialogButtons>
            <DialogButton Content="Aceptar" IsPrimary="true" OnClick="@AceptarClick" CssClass="add-task-button" />
            <DialogButton Content="Cancelar" IsPrimary="false" OnClick="@CancelarClick" CssClass="add-task-button"/>
        </DialogButtons>
        <DialogEvents OnOpen="@DialogOpen" Closed="@DialogClose" ></DialogEvents>
        <DialogAnimationSettings Effect="@DialogEffect.None"></DialogAnimationSettings>
    </SfDialog>